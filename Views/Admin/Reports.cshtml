@{
    ViewData["Title"] = "Báo cáo - Quản trị";
    var username = Context.Session.GetString("Username") ?? "Admin";
    var fullName = Context.Session.GetString("FullName") ?? "Quản trị viên";
}

<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <script src="https://cdn.jsdelivr.net/npm/chart.js@4.4.0/dist/chart.umd.min.js"></script>
    <style>
        @@keyframes gradient {
            0% { background-position: 0% 50%; }
            50% { background-position: 100% 50%; }
            100% { background-position: 0% 50%; }
        }
        
        @@keyframes float {
            0%, 100% { transform: translateY(0px); }
            50% { transform: translateY(-10px); }
        }
        
        @@keyframes pulse-glow {
            0%, 100% { box-shadow: 0 0 20px rgba(139, 92, 246, 0.3); }
            50% { box-shadow: 0 0 40px rgba(139, 92, 246, 0.6); }
        }

        @@keyframes fadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }

        @@keyframes slideUp {
            from { 
                opacity: 0;
                transform: translateY(30px) scale(0.95);
            }
            to { 
                opacity: 1;
                transform: translateY(0) scale(1);
            }
        }

        .gradient-bg {
            background: linear-gradient(-45deg, #667eea, #764ba2, #f093fb, #4facfe);
            background-size: 400% 400%;
            animation: gradient 15s ease infinite;
        }

        .glass-effect {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.2);
        }

        .card-premium {
            transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
            position: relative;
            overflow: hidden;
        }

        .card-premium::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.3), transparent);
            transition: left 0.5s;
        }

        .card-premium:hover::before {
            left: 100%;
        }

        .card-premium:hover {
            transform: translateY(-10px) scale(1.02);
            box-shadow: 0 30px 60px -12px rgba(0, 0, 0, 0.25);
        }

        .menu-item {
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
            position: relative;
            overflow: hidden;
        }

        .menu-item::before {
            content: '';
            position: absolute;
            left: 0;
            top: 0;
            height: 100%;
            width: 4px;
            background: linear-gradient(180deg, #667eea, #764ba2);
            transform: scaleY(0);
            transition: transform 0.3s;
        }

        .menu-item:hover::before,
        .menu-item.active::before {
            transform: scaleY(1);
        }

        .menu-item:hover,
        .menu-item.active {
            background: linear-gradient(135deg, rgba(102, 126, 234, 0.2), rgba(118, 75, 162, 0.2));
            transform: translateX(8px);
        }

        .stat-icon {
            animation: float 3s ease-in-out infinite;
        }

        .progress-bar {
            transition: width 1s ease-in-out;
        }

        .dropdown-menu {
            display: none;
            opacity: 0;
            transform: translateY(-10px);
            transition: all 0.3s ease;
        }

        .dropdown-menu.show {
            display: block;
            opacity: 1;
            transform: translateY(0);
        }

        .sidebar-premium {
            background: linear-gradient(180deg, #1a1a2e 0%, #16213e 50%, #0f3460 100%);
            box-shadow: 5px 0 30px rgba(0, 0, 0, 0.3);
        }

        .status-indicator {
            position: relative;
        }

        .status-indicator::before {
            content: '';
            position: absolute;
            width: 100%;
            height: 100%;
            border-radius: 9999px;
            animation: pulse-ring 2s ease-out infinite;
        }

        @@keyframes pulse-ring {
            0% { transform: scale(1); opacity: 0.8; }
            100% { transform: scale(1.5); opacity: 0; }
        }

        .chart-container {
            position: relative;
            height: 300px;
        }

        .filter-btn {
            transition: all 0.3s ease;
            cursor: pointer;
        }

        .filter-btn:hover {
            transform: translateY(-2px);
        }

        .filter-btn.active {
            background: linear-gradient(135deg, #667eea, #764ba2);
            color: white;
            transform: translateY(-2px);
        }
    </style>
</head>
<body class="bg-gradient-to-br from-gray-50 via-gray-100 to-gray-200 min-h-screen">
    <div class="flex h-screen overflow-hidden">
        <!-- Premium Sidebar -->
        <aside class="w-72 sidebar-premium text-white flex-shrink-0 shadow-2xl">
            <div class="p-6">
                <div class="flex items-center space-x-4 mb-10 p-4 bg-white/10 rounded-2xl backdrop-blur-sm">
                    <div class="w-14 h-14 gradient-bg rounded-2xl flex items-center justify-center shadow-lg stat-icon">
                        <i class="fas fa-coffee text-2xl text-white"></i>
                    </div>
                    <div>
                        <h1 class="text-2xl font-bold tracking-wide">Cafe Manager</h1>
                        <p class="text-xs text-gray-300">Premium Edition</p>
                    </div>
                </div>

                <nav class="space-y-2">
                    <a href="/Admin/Dashboard" class="menu-item flex items-center space-x-4 px-5 py-4 rounded-xl">
                        <i class="fas fa-chart-line w-6 text-lg"></i>
                        <span class="font-medium">Dashboard</span>
                    </a>
                    
                    <a href="/Admin/Orders" class="menu-item flex items-center space-x-4 px-5 py-4 rounded-xl">
                        <i class="fas fa-shopping-cart w-6 text-lg"></i>
                        <span class="font-medium">Đơn hàng</span>
                    </a>
                    
                    <a href="/Admin/Products" class="menu-item flex items-center space-x-4 px-5 py-4 rounded-xl">
                        <i class="fas fa-mug-hot w-6 text-lg"></i>
                        <span class="font-medium">Sản phẩm</span>
                    </a>
                    
                    <a href="/Admin/Reports" class="menu-item active flex items-center space-x-4 px-5 py-4 rounded-xl">
                        <i class="fas fa-chart-bar w-6 text-lg"></i>
                        <span class="font-medium">Báo cáo</span>
                    </a>
                    
                    <div class="pt-4 mt-4 border-t border-white/20">
                        <a href="/Admin/Settings" class="menu-item flex items-center space-x-4 px-5 py-4 rounded-xl">
                            <i class="fas fa-cog w-6 text-lg"></i>
                            <span class="font-medium">Cài đặt</span>
                        </a>
                    </div>
                </nav>

                <div class="mt-8 p-4 bg-white/10 rounded-2xl backdrop-blur-sm">
                    <div class="flex items-center space-x-3">
                        <div class="w-10 h-10 gradient-bg rounded-full flex items-center justify-center">
                            <span class="text-white font-bold">@fullName.Substring(0, 1).ToUpper()</span>
                        </div>
                        <div class="flex-1 min-w-0">
                            <p class="text-sm font-semibold truncate">@fullName</p>
                            <p class="text-xs text-gray-300 truncate">@@username</p>
                        </div>
                        <div class="status-indicator w-3 h-3 bg-green-400 rounded-full"></div>
                    </div>
                </div>
            </div>
        </aside>

        <div class="flex-1 flex flex-col overflow-hidden">
            <!-- Premium Header -->
            <header class="glass-effect shadow-xl z-10 border-b border-gray-200">
                <div class="flex items-center justify-between px-8 py-5">
                    <div>
                        <h2 class="text-3xl font-bold bg-gradient-to-r from-purple-600 to-pink-600 bg-clip-text text-transparent">
                            Báo cáo & Thống kê
                        </h2>
                        <p class="text-gray-600 text-sm mt-2 flex items-center">
                            <i class="fas fa-chart-bar mr-2 text-purple-500"></i>
                            Phân tích chi tiết doanh thu và hoạt động kinh doanh
                        </p>
                    </div>
                    
                    <!-- User Menu -->
                    <div class="relative">
                        <button id="userMenuBtn" type="button" class="flex items-center space-x-4 px-5 py-3 rounded-2xl hover:bg-gray-100 transition-all duration-300 border border-gray-200">
                            <div class="w-12 h-12 gradient-bg rounded-xl flex items-center justify-center shadow-lg">
                                <span class="text-white font-bold text-lg">@fullName.Substring(0, 1).ToUpper()</span>
                            </div>
                            <div class="text-left">
                                <p class="font-bold text-gray-800">@fullName</p>
                                <p class="text-xs text-gray-500">@@username • Admin</p>
                            </div>
                            <i id="dropdownIcon" class="fas fa-chevron-down text-gray-400 transition-transform"></i>
                        </button>
                        
                        <!-- Dropdown Menu -->
                        <div id="dropdownMenu" class="dropdown-menu absolute right-0 mt-3 w-64 bg-white rounded-2xl shadow-2xl border border-gray-100 z-50">
                            <div class="p-4 border-b border-gray-100 gradient-bg rounded-t-2xl">
                                <p class="text-sm font-bold text-white">@fullName</p>
                                <p class="text-xs text-white/80">@@username</p>
                            </div>
                            <div class="p-2">
                                <a href="/Accounts/Profile" class="flex items-center space-x-3 px-4 py-3 text-sm text-gray-700 hover:bg-gray-50 rounded-xl transition">
                                    <i class="fas fa-user text-purple-500 w-5"></i>
                                    <span>Hồ sơ cá nhân</span>
                                </a>
                                <a href="/Accounts/ChangePassword" class="flex items-center space-x-3 px-4 py-3 text-sm text-gray-700 hover:bg-gray-50 rounded-xl transition">
                                    <i class="fas fa-key text-blue-500 w-5"></i>
                                    <span>Đổi mật khẩu</span>
                                </a>
                                <div class="border-t border-gray-100 my-2"></div>
                                <a href="/Accounts/Logout" class="flex items-center space-x-3 px-4 py-3 text-sm text-red-600 hover:bg-red-50 rounded-xl transition">
                                    <i class="fas fa-sign-out-alt w-5"></i>
                                    <span>Đăng xuất</span>
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            </header>

            <!-- Reports Content -->
            <main class="flex-1 overflow-y-auto p-8">
                <!-- Time Filter -->
                <div class="glass-effect rounded-3xl shadow-xl p-6 border border-gray-100 mb-6">
                    <div class="flex flex-wrap items-center justify-between gap-4">
                        <div class="flex flex-wrap gap-3">
                            <button class="filter-btn active px-6 py-3 bg-white rounded-xl border-2 border-gray-200 font-semibold text-sm" data-period="today">
                                <i class="fas fa-calendar-day mr-2"></i>Hôm nay
                            </button>
                            <button class="filter-btn px-6 py-3 bg-white rounded-xl border-2 border-gray-200 font-semibold text-sm" data-period="week">
                                <i class="fas fa-calendar-week mr-2"></i>Tuần này
                            </button>
                            <button class="filter-btn px-6 py-3 bg-white rounded-xl border-2 border-gray-200 font-semibold text-sm" data-period="month">
                                <i class="fas fa-calendar-alt mr-2"></i>Tháng này
                            </button>
                        </div>
                        <button onclick="exportReport()" class="px-6 py-3 bg-gradient-to-r from-green-500 to-emerald-600 text-white rounded-xl font-semibold text-sm hover:shadow-lg transition-all">
                            <i class="fas fa-download mr-2"></i>Xuất báo cáo
                        </button>
                    </div>
                </div>

                <!-- Stats Overview -->
                <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
                    <!-- Today Revenue -->
                    <div class="card-premium bg-white rounded-3xl shadow-xl p-6 border border-gray-100">
                        <div class="flex items-center justify-between mb-4">
                            <div class="w-16 h-16 bg-gradient-to-br from-green-400 to-emerald-600 rounded-2xl flex items-center justify-center shadow-lg stat-icon">
                                <i class="fas fa-dollar-sign text-white text-2xl"></i>
                            </div>
                            <div class="text-right">
                                <span class="px-3 py-1 bg-green-100 text-green-700 text-xs font-bold rounded-full">
                                    @(ViewBag.GrowthRate > 0 ? "+" : "")@ViewBag.GrowthRate.ToString("F1")%
                                </span>
                            </div>
                        </div>
                        <h3 class="text-gray-500 text-sm font-semibold mb-2 uppercase tracking-wide">Doanh thu hôm nay</h3>
                        <p class="text-4xl font-bold bg-gradient-to-r from-green-600 to-emerald-600 bg-clip-text text-transparent">
                            @(ViewBag.TodayRevenue != null ? ViewBag.TodayRevenue.ToString("N0") : "0") đ
                        </p>
                    </div>

                    <!-- Week Revenue -->
                    <div class="card-premium bg-white rounded-3xl shadow-xl p-6 border border-gray-100">
                        <div class="flex items-center justify-between mb-4">
                            <div class="w-16 h-16 bg-gradient-to-br from-blue-400 to-blue-600 rounded-2xl flex items-center justify-center shadow-lg stat-icon">
                                <i class="fas fa-calendar-week text-white text-2xl"></i>
                            </div>
                        </div>
                        <h3 class="text-gray-500 text-sm font-semibold mb-2 uppercase tracking-wide">Doanh thu tuần này</h3>
                        <p class="text-4xl font-bold bg-gradient-to-r from-blue-600 to-blue-600 bg-clip-text text-transparent">
                            @(ViewBag.WeekRevenue != null ? ViewBag.WeekRevenue.ToString("N0") : "0") đ
                        </p>
                    </div>

                    <!-- Month Revenue -->
                    <div class="card-premium bg-white rounded-3xl shadow-xl p-6 border border-gray-100">
                        <div class="flex items-center justify-between mb-4">
                            <div class="w-16 h-16 bg-gradient-to-br from-purple-400 to-purple-600 rounded-2xl flex items-center justify-center shadow-lg stat-icon">
                                <i class="fas fa-chart-line text-white text-2xl"></i>
                            </div>
                        </div>
                        <h3 class="text-gray-500 text-sm font-semibold mb-2 uppercase tracking-wide">Doanh thu tháng này</h3>
                        <p class="text-4xl font-bold bg-gradient-to-r from-purple-600 to-purple-600 bg-clip-text text-transparent">
                            @(ViewBag.MonthRevenue != null ? ViewBag.MonthRevenue.ToString("N0") : "0") đ
                        </p>
                    </div>

                    <!-- Total Orders -->
                    <div class="card-premium bg-white rounded-3xl shadow-xl p-6 border border-gray-100">
                        <div class="flex items-center justify-between mb-4">
                            <div class="w-16 h-16 bg-gradient-to-br from-orange-400 to-orange-600 rounded-2xl flex items-center justify-center shadow-lg stat-icon">
                                <i class="fas fa-shopping-bag text-white text-2xl"></i>
                            </div>
                        </div>
                        <h3 class="text-gray-500 text-sm font-semibold mb-2 uppercase tracking-wide">Tổng đơn hàng</h3>
                        <p class="text-4xl font-bold bg-gradient-to-r from-orange-600 to-orange-600 bg-clip-text text-transparent">
                            @(ViewBag.MonthOrders ?? 0)
                        </p>
                    </div>
                </div>

                <!-- Charts Row -->
                <div class="grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8">
                    <!-- Revenue Chart -->
                    <div class="glass-effect rounded-3xl shadow-xl p-6 border border-gray-100">
                        <h3 class="text-xl font-bold text-gray-800 mb-6 flex items-center">
                            <span class="w-2 h-8 bg-gradient-to-b from-purple-600 to-pink-600 rounded-full mr-3"></span>
                            Doanh thu 7 ngày gần đây
                        </h3>
                        <div class="chart-container">
                            <canvas id="revenueChart"></canvas>
                        </div>
                    </div>

                    <!-- Orders Status Chart -->
                    <div class="glass-effect rounded-3xl shadow-xl p-6 border border-gray-100">
                        <h3 class="text-xl font-bold text-gray-800 mb-6 flex items-center">
                            <span class="w-2 h-8 bg-gradient-to-b from-blue-600 to-cyan-600 rounded-full mr-3"></span>
                            Phân bố trạng thái đơn hàng
                        </h3>
                        <div class="chart-container">
                            <canvas id="statusChart"></canvas>
                        </div>
                    </div>
                </div>

                <!-- Category & Products Row -->
                <div class="grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8">
                    <!-- Revenue by Category -->
                    <div class="glass-effect rounded-3xl shadow-xl p-6 border border-gray-100">
                        <h3 class="text-xl font-bold text-gray-800 mb-6 flex items-center">
                            <span class="w-2 h-8 bg-gradient-to-b from-green-600 to-emerald-600 rounded-full mr-3"></span>
                            Doanh thu theo danh mục
                        </h3>
                        <div class="space-y-4">
                            @if (ViewBag.RevenueByCategory != null && ((IEnumerable<dynamic>)ViewBag.RevenueByCategory).Any())
                            {
                                foreach (var category in ViewBag.RevenueByCategory)
                                {
                                    var percentage = ViewBag.MonthRevenue > 0 ? (category.Revenue / (decimal)ViewBag.MonthRevenue * 100) : 0;
                                    <div>
                                        <div class="flex justify-between items-center mb-2">
                                            <span class="font-bold text-gray-800">@category.Category</span>
                                            <span class="text-sm font-semibold text-green-600">@category.Revenue.ToString("N0") đ</span>
                                        </div>
                                        <div class="h-3 bg-gray-200 rounded-full overflow-hidden">
                                            <div class="h-full bg-gradient-to-r from-green-400 to-emerald-600 rounded-full transition-all duration-1000" style="width: @percentage.ToString("F1")%"></div>
                                        </div>
                                        <p class="text-xs text-gray-500 mt-1">@category.Quantity đơn vị • @percentage.ToString("F1")%</p>
                                    </div>
                                }
                            }
                            else
                            {
                                <p class="text-center text-gray-500 py-8">Chưa có dữ liệu</p>
                            }
                        </div>
                    </div>

                    <!-- Top Products -->
                    <div class="glass-effect rounded-3xl shadow-xl p-6 border border-gray-100">
                        <h3 class="text-xl font-bold text-gray-800 mb-6 flex items-center">
                            <span class="w-2 h-8 bg-gradient-to-b from-orange-600 to-red-600 rounded-full mr-3"></span>
                            Top 10 sản phẩm bán chạy
                        </h3>
                        <div class="space-y-3 max-h-96 overflow-y-auto">
                            @if (ViewBag.TopProducts != null && ((IEnumerable<dynamic>)ViewBag.TopProducts).Any())
                            {
                                int rank = 1;
                                foreach (var product in ViewBag.TopProducts)
                                {
                                    <div class="flex items-center space-x-4 p-3 rounded-xl hover:bg-gradient-to-r hover:from-orange-50 hover:to-red-50 transition-all">
                                        <div class="w-10 h-10 bg-gradient-to-br from-orange-400 to-red-500 rounded-lg flex items-center justify-center flex-shrink-0 font-bold text-white">
                                            @rank
                                        </div>
                                        <div class="flex-1 min-w-0">
                                            <p class="font-bold text-gray-800 truncate">@product.Name</p>
                                            <p class="text-sm text-gray-500">@product.TotalRevenue.ToString("N0") đ</p>
                                        </div>
                                        <div class="text-right">
                                            <div class="px-3 py-1 bg-orange-100 rounded-full">
                                                <span class="text-sm font-bold text-orange-600">@product.TotalQuantity</span>
                                            </div>
                                        </div>
                                    </div>
                                    rank++;
                                }
                            }
                            else
                            {
                                <p class="text-center text-gray-500 py-8">Chưa có dữ liệu</p>
                            }
                        </div>
                    </div>
                </div>

                <!-- Peak Hours Chart -->
                <div class="glass-effect rounded-3xl shadow-xl p-6 border border-gray-100">
                    <h3 class="text-xl font-bold text-gray-800 mb-6 flex items-center">
                        <span class="w-2 h-8 bg-gradient-to-b from-indigo-600 to-purple-600 rounded-full mr-3"></span>
                        Giờ cao điểm
                    </h3>
                    <div class="chart-container" style="height: 250px;">
                        <canvas id="hourChart"></canvas>
                    </div>
                </div>
            </main>
        </div>
    </div>

    <script>
// ========== DROPDOWN MENU ==========
const userMenuBtn = document.getElementById('userMenuBtn');
const dropdownMenu = document.getElementById('dropdownMenu');
const dropdownIcon = document.getElementById('dropdownIcon');

userMenuBtn.addEventListener('click', (e) => {
    e.preventDefault();
    e.stopPropagation();
    dropdownMenu.classList.toggle('show');
    dropdownIcon.classList.toggle('fa-chevron-down');
    dropdownIcon.classList.toggle('fa-chevron-up');
});

document.addEventListener('click', (e) => {
    if (!userMenuBtn.contains(e.target) && !dropdownMenu.contains(e.target)) {
        dropdownMenu.classList.remove('show');
        dropdownIcon.classList.remove('fa-chevron-up');
        dropdownIcon.classList.add('fa-chevron-down');
    }
});

// ========== FILTER BUTTONS ==========
const filterButtons = document.querySelectorAll('.filter-btn');
filterButtons.forEach(btn => {
    btn.addEventListener('click', function() {
        filterButtons.forEach(b => b.classList.remove('active'));
        this.classList.add('active');
        const period = this.dataset.period;
        loadReportData(period);
    });
});

// ========== LOAD REPORT DATA ==========
async function loadReportData(period) {
    try {
        const response = await fetch(`/Admin/Reports/GetRevenueByPeriod?period=${period}`);
        const data = await response.json();
        if (data.success) {
            console.log('Report data loaded:', data);
            // Update UI with new data
        }
    } catch (error) {
        console.error('Error loading report:', error);
    }
}

// ========== EXPORT REPORT ==========
async function exportReport() {
    try {
        const response = await fetch('/Admin/Reports/ExportReport?period=month');
        const result = await response.json();
        if (result.success) {
            showNotification(result.message, 'success');
        } else {
            showNotification(result.message || 'Lỗi khi xuất báo cáo', 'error');
        }
    } catch (error) {
        console.error('Error exporting report:', error);
        showNotification('Lỗi khi xuất báo cáo', 'error');
    }
}

// ========== NOTIFICATION ==========
function showNotification(message, type = 'success') {
    const bgColor = type === 'success' ? 'bg-green-500' : 'bg-red-500';
    const icon = type === 'success' ? 'fa-check-circle' : 'fa-exclamation-circle';
    
    const notification = document.createElement('div');
    notification.className = `fixed top-4 right-4 ${bgColor} text-white px-6 py-4 rounded-xl shadow-2xl z-50 flex items-center space-x-3`;
    notification.style.animation = 'slideUp 0.3s ease';
    notification.innerHTML = `
        <i class="fas ${icon} text-xl"></i>
        <span class="font-semibold">${message}</span>
    `;
    
    document.body.appendChild(notification);
    
    setTimeout(() => {
        notification.style.opacity = '0';
        setTimeout(() => notification.remove(), 300);
    }, 3000);
}

// ========== CHARTS ==========
// Revenue Chart (7 days)
const revenueData = @Html.Raw(Json.Serialize(ViewBag.Last7Days ?? new List<object>()));
const revenueCtx = document.getElementById('revenueChart').getContext('2d');
new Chart(revenueCtx, {
    type: 'line',
    data: {
        labels: revenueData.map(d => d.date),
        datasets: [{
            label: 'Doanh thu (đ)',
            data: revenueData.map(d => d.revenue),
            backgroundColor: 'rgba(102, 126, 234, 0.2)',
            borderColor: 'rgba(102, 126, 234, 1)',
            borderWidth: 3,
            fill: true,
            tension: 0.4,
            pointRadius: 5,
            pointHoverRadius: 7,
            pointBackgroundColor: '#667eea',
            pointBorderColor: '#fff',
            pointBorderWidth: 2
        }]
    },
    options: {
        responsive: true,
        maintainAspectRatio: false,
        plugins: {
            legend: {
                display: true,
                position: 'top',
                labels: {
                    font: { size: 12, weight: 'bold' },
                    padding: 15
                }
            },
            tooltip: {
                backgroundColor: 'rgba(0, 0, 0, 0.8)',
                padding: 12,
                titleFont: { size: 14, weight: 'bold' },
                bodyFont: { size: 13 },
                callbacks: {
                    label: function(context) {
                        return 'Doanh thu: ' + context.parsed.y.toLocaleString('vi-VN') + ' đ';
                    }
                }
            }
        },
        scales: {
            y: {
                beginAtZero: true,
                ticks: {
                    callback: function(value) {
                        return (value / 1000).toFixed(0) + 'K';
                    },
                    font: { size: 11 }
                },
                grid: {
                    color: 'rgba(0, 0, 0, 0.05)'
                }
            },
            x: {
                ticks: {
                    font: { size: 11 }
                },
                grid: {
                    display: false
                }
            }
        }
    }
});

// Status Chart
const statusData = @Html.Raw(Json.Serialize(ViewBag.OrdersByStatus ?? new List<object>()));
const statusLabels = statusData.map(s => {
    switch(s.status) {
        case 'pending': return 'Chờ xử lý';
        case 'processing': return 'Đang xử lý';
        case 'done': return 'Hoàn thành';
        case 'cancelled': return 'Đã hủy';
        default: return s.status;
    }
});

const statusCtx = document.getElementById('statusChart').getContext('2d');
new Chart(statusCtx, {
    type: 'doughnut',
    data: {
        labels: statusLabels,
        datasets: [{
            data: statusData.map(s => s.count),
            backgroundColor: [
                'rgba(251, 191, 36, 0.8)',
                'rgba(59, 130, 246, 0.8)',
                'rgba(34, 197, 94, 0.8)',
                'rgba(239, 68, 68, 0.8)'
            ],
            borderColor: [
                'rgb(251, 191, 36)',
                'rgb(59, 130, 246)',
                'rgb(34, 197, 94)',
                'rgb(239, 68, 68)'
            ],
            borderWidth: 2
        }]
    },
    options: {
        responsive: true,
        maintainAspectRatio: false,
        plugins: {
            legend: {
                position: 'bottom',
                labels: {
                    font: { size: 12, weight: 'bold' },
                    padding: 15,
                    generateLabels: function(chart) {
                        const data = chart.data;
                        if (data.labels.length && data.datasets.length) {
                            return data.labels.map((label, i) => {
                                const value = data.datasets[0].data[i];
                                const total = data.datasets[0].data.reduce((a, b) => a + b, 0);
                                const percent = ((value / total) * 100).toFixed(1);
                                return {
                                    text: `${label}: ${value} (${percent}%)`,
                                    fillStyle: data.datasets[0].backgroundColor[i],
                                    hidden: false,
                                    index: i
                                };
                            });
                        }
                        return [];
                    }
                }
            },
            tooltip: {
                backgroundColor: 'rgba(0, 0, 0, 0.8)',
                padding: 12,
                titleFont: { size: 14, weight: 'bold' },
                bodyFont: { size: 13 },
                callbacks: {
                    label: function(context) {
                        const total = context.dataset.data.reduce((a, b) => a + b, 0);
                        const percent = ((context.parsed / total) * 100).toFixed(1);
                        return `${context.label}: ${context.parsed} đơn (${percent}%)`;
                    }
                }
            }
        }
    }
});

// Peak Hours Chart
const hourData = @Html.Raw(Json.Serialize(ViewBag.OrdersByHour ?? new List<object>()));
const allHours = Array.from({length: 24}, (_, i) => i);
const hourCounts = allHours.map(hour => {
    const found = hourData.find(h => h.hour === hour);
    return found ? found.count : 0;
});

const hourCtx = document.getElementById('hourChart').getContext('2d');
new Chart(hourCtx, {
    type: 'bar',
    data: {
        labels: allHours.map(h => h + ':00'),
        datasets: [{
            label: 'Số đơn hàng',
            data: hourCounts,
            backgroundColor: function(context) {
                const value = context.parsed.y;
                const max = Math.max(...hourCounts);
                const intensity = value / max;
                return `rgba(139, 92, 246, ${0.3 + intensity * 0.7})`;
            },
            borderColor: 'rgba(139, 92, 246, 1)',
            borderWidth: 2,
            borderRadius: 8
        }]
    },
    options: {
        responsive: true,
        maintainAspectRatio: false,
        plugins: {
            legend: {
                display: true,
                position: 'top',
                labels: {
                    font: { size: 12, weight: 'bold' },
                    padding: 15
                }
            },
            tooltip: {
                backgroundColor: 'rgba(0, 0, 0, 0.8)',
                padding: 12,
                titleFont: { size: 14, weight: 'bold' },
                bodyFont: { size: 13 },
                callbacks: {
                    title: function(context) {
                        return 'Giờ ' + context[0].label;
                    },
                    label: function(context) {
                        return 'Số đơn: ' + context.parsed.y;
                    }
                }
            }
        },
        scales: {
            y: {
                beginAtZero: true,
                ticks: {
                    stepSize: 1,
                    font: { size: 11 }
                },
                grid: {
                    color: 'rgba(0, 0, 0, 0.05)'
                }
            },
            x: {
                ticks: {
                    font: { size: 10 },
                    maxRotation: 45,
                    minRotation: 45
                },
                grid: {
                    display: false
                }
            }
        }
    }
});

console.log('✅ Reports page loaded successfully!');
    </script>
</body>
</html>